from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from bas.base import mycursor, mydb
from aiogram.filters import CommandStart, Command
from aiogram import Router, types, Dispatcher
from bas.base import mycursor, mydb


main = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='–ü—Ä–æ—Ñ–∏–ª—åü§ñ')],
        [KeyboardButton(text='–ó–∞–¥–∞–Ω–∏—èüìã'), KeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µüìá')],
        [KeyboardButton(text='–ë–∞–Ω–∫üèõÔ∏è')]
    ],
    resize_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...'
)

publicu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='yes')],
        [InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='no')],
    ]
)

async def handle_button(callback_query: types.CallbackQuery):
    # –°–∫—Ä—ã—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await callback_query.message.edit_reply_markup(reply_markup=None)
    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback_query.message.answer("–ö–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∏ —Å–∫—Ä—ã—Ç–∞.")

async def create_tasks_keyboard():
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞
    sql_get_task = 'SELECT task_id, task_name FROM tasks'
    mycursor.execute(sql_get_task)
    tasks_data = mycursor.fetchall()  # –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ fetchall()

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∑–∞–¥–∞—á
    tasks_keyboard = InlineKeyboardMarkup(inline_keyboard=[])  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫ –∫–Ω–æ–ø–æ–∫
    buttons = []
    for task_id, task_name in tasks_data:
        button = InlineKeyboardButton(text=f'{task_name}', callback_data=f'task_{task_id}')
        buttons.append(button)
    
    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ)
    row_size = 2
    rows = [buttons[i:i + row_size] for i in range(0, len(buttons), row_size)]

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    tasks_keyboard.inline_keyboard = rows

    return tasks_keyboard

